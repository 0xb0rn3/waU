#!/usr/bin/env bash
# Wireless Adapter Diagnostic and Management Tool
# Supports Debian/Ubuntu, Fedora, Arch, and derivatives

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

declare -A DRIVER_REPOS=(
    ["RTL8812AU"]="https://github.com/lwfinger/rtl8812au.git"
    ["RTL8814AU"]="https://github.com/lwfinger/rtl8814au.git"
    ["RTL88x2BU"]="https://github.com/lwfinger/rtl88x2bu.git"
)

detect_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    else
        echo "unknown"
    fi
}

check_dependencies() {
    local distro=$(detect_distro)
    case $distro in
        "debian"|"ubuntu"|"kali"|"parrot")
            sudo apt-get install -y git build-essential dkms linux-headers-$(uname -r) ;;
        "fedora")
            sudo dnf install -y git kernel-devel kernel-headers dkms ;;
        "arch"|"manjaro")
            sudo pacman -S --needed git base-devel linux-headers dkms ;;
        *) echo "Unsupported distribution"; exit 1 ;;
    esac
}

detect_adapters() {
    echo -e "${YELLOW}[*] Detecting wireless adapters...${NC}"
    local adapters=$(lsusb | grep -iE 'Wireless|Network|RTL|Atheros|MediaTek')
    
    if [ -z "$adapters" ]; then
        echo -e "${RED}[-] No wireless adapters detected!${NC}"
        return 1
    fi

    echo -e "${GREEN}[+] Detected Adapters:${NC}"
    while IFS= read -r line; do
        local bus=$(echo "$line" | awk '{print $2}')
        local device=$(echo "$line" | awk '{print $4}' | tr -d ':')
        local id=$(echo "$line" | awk '{print $6}')
        local driver=$(lspci -k | grep -A 2 "$id" | grep "Kernel driver in use" | awk '{print $NF}')
        
        echo -e "USB ${bus}:${device} | ID: ${id}"
        echo -e "Driver: ${driver:-${RED}Not loaded${NC}}"
        echo -e "SysFS Path: /sys/bus/usb/devices/${bus}-${device}/"
        echo "----------------------------------------"
    done <<< "$adapters"
}

install_driver() {
    local chipset=$1
    local distro=$(detect_distro)
    
    echo -e "${YELLOW}[*] Installing driver for ${chipset}...${NC}"
    
    # Clone appropriate repository
    git clone ${DRIVER_REPOS[$chipset]} /tmp/${chipset}_driver
    cd /tmp/${chipset}_driver

    case $distro in
        "debian"|"ubuntu"|"kali"|"parrot")
            make clean && make
            sudo make install
            sudo modprobe ${chipset,,} ;;
        "fedora")
            sudo dkms add .
            sudo dkms build -m ${chipset} -v $(git describe --tags)
            sudo dkms install -m ${chipset} -v $(git describe --tags) ;;
        "arch"|"manjaro")
            make clean && make
            sudo make dkms_install
            sudo depmod -a
            sudo modprobe ${chipset,,} ;;
    esac

    if [ $? -eq 0 ]; then
        echo -e "${GREEN}[+] Driver installed successfully!${NC}"
    else
        echo -e "${RED}[-] Installation failed! Check dependencies.${NC}"
    fi
}

test_monitor_mode() {
    echo -e "${YELLOW}[*] Testing monitor mode...${NC}"
    local iface=$(iw dev | awk '$1=="Interface"{print $2}')
    
    if [ -z "$iface" ]; then
        echo -e "${RED}[-] No wireless interfaces found!${NC}"
        return 1
    fi

    sudo ip link set $iface down
    sudo iw $iface set monitor control
    sudo ip link set $iface up
    
    if iwconfig $iface | grep -q "Mode:Monitor"; then
        echo -e "${GREEN}[+] Monitor mode enabled on ${iface}${NC}"
        return 0
    else
        echo -e "${RED}[-] Failed to enable monitor mode!${NC}"
        return 1
    fi
}

main_menu() {
    while true; do
        clear
        echo -e "${YELLOW}Wireless Adapter Management Tool${NC}"
        echo "----------------------------------------"
        echo "1. Detect Wireless Adapters"
        echo "2. Install Drivers (lwfinger repos)"
        echo "3. Test Monitor Mode"
        echo "4. Check Dependencies"
        echo "5. Exit"
        echo -n "Choice: "
        
        read choice
        case $choice in
            1) detect_adapters; read -p "Press enter to continue..." ;;
            2) 
                echo "Available drivers:"
                for key in "${!DRIVER_REPOS[@]}"; do
                    echo "- $key"
                done
                echo -n "Enter chipset: "
                read chipset
                install_driver "$chipset"
                read -p "Press enter to continue..." ;;
            3) test_monitor_mode; read -p "Press enter to continue..." ;;
            4) check_dependencies; read -p "Press enter to continue..." ;;
            5) exit 0 ;;
            *) echo -e "${RED}Invalid option!${NC}"; sleep 1 ;;
        esac
    done
}

# Initial checks
if [ "$(id -u)" -ne 0 ]; then
    echo -e "${RED}This script must be run as root!${NC}"
    exit 1
fi

main_menu
